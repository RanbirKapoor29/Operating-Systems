5.Write a program to implement the FCFS CPU Scheduling Algorithms 

import java.util.Scanner;

class Process {
    int pid, arrivalTime, burstTime, completionTime, turnaroundTime, waitingTime;
}

public class FCFS {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        System.out.print("Enter number of processes: ");
        int n = sc.nextInt();
        Process[] processes = new Process[n];
        
        System.out.println("Enter Arrival Time and Burst Time for each process:");
        for (int i = 0; i < n; i++) {
            processes[i] = new Process();
            processes[i].pid = i + 1;
            System.out.print("Process " + (i + 1) + ": ");
            processes[i].arrivalTime = sc.nextInt();
            processes[i].burstTime = sc.nextInt();
        }
        
        calculateFCFS(processes, n);
    }
    
    public static void calculateFCFS(Process[] processes, int n) {
        int totalTurnaroundTime = 0, totalWaitingTime = 0;
        
        for (int i = 0; i < n; i++) {
            if (i == 0)
                processes[i].completionTime = processes[i].arrivalTime + processes[i].burstTime;
            else
                processes[i].completionTime = Math.max(processes[i - 1].completionTime, processes[i].arrivalTime) + processes[i].burstTime;
            
            processes[i].turnaroundTime = processes[i].completionTime - processes[i].arrivalTime;
            processes[i].waitingTime = processes[i].turnaroundTime - processes[i].burstTime;
            
            totalTurnaroundTime += processes[i].turnaroundTime;
            totalWaitingTime += processes[i].waitingTime;
        }
        
        System.out.println("\nProcess\tArrival Time\tBurst Time\tCompletion Time\tTurnaround Time\tWaiting Time");
        for (Process p : processes) {
            System.out.println(p.pid + "\t" + p.arrivalTime + "\t\t" + p.burstTime + "\t\t" + p.completionTime + "\t\t" + p.turnaroundTime + "\t\t" + p.waitingTime);
        }
        
        System.out.printf("\nAverage Turnaround Time: %.2f\n", (double) totalTurnaroundTime / n);
        System.out.printf("Average Waiting Time: %.2f\n", (double) totalWaitingTime / n);
    }
}
