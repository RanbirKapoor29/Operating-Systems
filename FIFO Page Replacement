10. Write a program to implement the FIFO Page Replacement Algorithms 

import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class FIFOPageReplacement {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        
        System.out.print("Enter the number of frames: ");
        int frames = sc.nextInt();
        
        System.out.print("Enter the number of pages: ");
        int pagesCount = sc.nextInt();
        
        int[] pages = new int[pagesCount];
        System.out.println("Enter the reference string: ");
        for (int i = 0; i < pagesCount; i++) {
            pages[i] = sc.nextInt();
        }
        
        fifoPageReplacement(pages, frames);
        sc.close();
    }
    
    public static void fifoPageReplacement(int[] pages, int frames) {
        Queue<Integer> queue = new LinkedList<>();
        int pageFaults = 0;
        
        System.out.println("\nPage Reference | Frames | Page Fault");
        for (int page : pages) {
            if (!queue.contains(page)) {
                if (queue.size() == frames) {
                    queue.poll(); // Remove the oldest page
                }
                queue.add(page);
                pageFaults++;
                System.out.println(page + " | " + queue + " | Yes");
            } else {
                System.out.println(page + " | " + queue + " | No");
            }
        }
        
        System.out.println("\nTotal Page Faults: " + pageFaults);
    }
}
